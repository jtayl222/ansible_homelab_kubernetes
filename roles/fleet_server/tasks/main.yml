---
# Main tasks for Fleet server role

# Include variables
- name: Include variables based on environment
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "default.yml"
  tags: always

# Validate prerequisites
- name: Verify kubeconfig exists
  stat:
    path: "{{ kubeconfig_path }}"
  register: kubeconfig_verify
  delegate_to: "{{ groups['utility'][0] }}"
  become: false

- name: Fail if kubeconfig doesn't exist
  fail:
    msg: "Kubeconfig file not found at {{ kubeconfig_path }}. Run prerequisite playbooks first."
  when: not kubeconfig_verify.stat.exists

# Ensure Elasticsearch is available
- name: Check if Elasticsearch is running
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ elk_namespace }}"
    label_selectors:
      - app={{ elasticsearch_cluster_name }}-master
    kubeconfig: "{{ kubeconfig_path }}"
  register: es_pods
  delegate_to: "{{ groups['utility'][0] }}"
  become: false

- name: Fail if Elasticsearch is not available
  fail:
    msg: "Elasticsearch is not running. Please ensure ELK stack is deployed first."
  when: es_pods.resources is not defined or es_pods.resources | length == 0

# Get the elastic password from the Kubernetes secret if not provided
- name: Get elastic password from Kubernetes secret
  shell: |
    kubectl --kubeconfig={{ kubeconfig_path }} get secret {{ elasticsearch_cluster_name }}-master-credentials -n {{ elk_namespace }} -o jsonpath='{.data.password}' | base64 --decode
  register: elastic_pw_result
  delegate_to: "{{ groups['utility'][0] }}"
  become: false
  when: elastic_password is not defined or elastic_password == ""
  no_log: true
  changed_when: false

- name: Set elastic password from K8s secret
  set_fact:
    elastic_password: "{{ elastic_pw_result.stdout }}"
  when: elastic_password is not defined or elastic_password == ""
  no_log: true

# Setup Fleet certificates
- name: Setup Fleet certificates
  include_tasks: certificates.yml
  tags: fleet

# Deployment of Fleet server
- name: Deploy Fleet server
  include_tasks: deploy.yml
  tags: fleet

# Display Fleet access information
- name: Display Fleet server access information
  debug:
    msg:
      - "Fleet server: http://{{ hostvars[groups['utility'][0]]['ansible_host'] }}:{{ traefik_port }}/fleet"
      - "Elasticsearch connection: https://{{ elasticsearch_cluster_name }}-master:9200"
  tags: fleet