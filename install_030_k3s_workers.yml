- name: Setup K3s Worker Nodes
  hosts: k3s_workers
  become: yes
  vars:
    control_node: "{{ groups['k3s_control_plane'][0] }}"  # Get the first control plane node
  tasks:
  - name: Fetch k3s token from control node
    ansible.builtin.slurp:
      src: /var/lib/rancher/k3s/server/node-token
    register: node_token_b64
    delegate_to: '{{ control_node }}'
  - name: Set k3s token fact
    set_fact:
      k3s_token: "{{ node_token_b64['content'] | b64decode | trim }}"

  - name: Get control node IP
    set_fact:
      control_node_ip: "{{ hostvars[control_node]['ansible_host'] | default(hostvars[control_node]['ansible_default_ipv4']['address'])
        }}"

  - name: Install prerequisites
    apt:
      name:
      - curl
      - apt-transport-https
      state: present
      update_cache: yes

  - name: Install networking diagnostic utilities
    apt:
      name:
      - net-tools
      - netcat-openbsd
      - curl
      - traceroute
      - iproute2
      - iputils-ping
      - dnsutils
      state: present
      update_cache: yes
    become: yes

  - name: Download k3s install script
    get_url:
      url: https://get.k3s.io
      dest: /tmp/k3s-install.sh
      mode: '0755'

  - name: Install k3s worker
    shell: |
      export K3S_URL="https://{{ control_node_ip }}:6443"
      export K3S_TOKEN="{{ k3s_token }}"
      /tmp/k3s-install.sh
    args:
      creates: /usr/local/bin/k3s
      executable: /bin/bash

  - name: Ensure k3s service is enabled and started
    systemd:
      name: k3s-agent    # Changed to k3s-agent which is the worker node service name
      enabled: yes
      state: started

  - name: Wait for node to register
    pause:
      seconds: 10

  - name: Verify k3s worker node status (from control plane)
    command: kubectl get nodes
    register: nodes_status
    delegate_to: '{{ control_node }}'
    become: yes

  - name: Display nodes status
    debug:
      msg: '{{ nodes_status.stdout_lines }}'
