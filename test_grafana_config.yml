- name: Test Grafana Configuration
  hosts: k3s_control_plane
  become: true
  gather_facts: true
  vars:
    grafana_test_mode: true
    grafana_namespace: monitoring  # Match your existing namespace
    grafana_release_name: grafana  # Match your existing release name
  tasks:
  - name: Check if kubectl is installed and properly configured
    ansible.builtin.command: kubectl version --client
    register: kubectl_check
    changed_when: false
    failed_when: false

  - name: Fail if kubectl is not available
    ansible.builtin.fail:
      msg: kubectl is not available or not properly configured
    when: kubectl_check.rc != 0

  - name: Setup KUBECONFIG environment variable
    ansible.builtin.set_fact:
      kubeconfig_env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  - name: Check if Grafana deployment exists using kubectl
    ansible.builtin.command: kubectl get deployment {{ grafana_release_name }} -n
      {{ grafana_namespace }} -o name
    register: grafana_check
    changed_when: false
    failed_when: false
    environment: '{{ kubeconfig_env }}'
  - name: Debug Grafana deployment check result
    ansible.builtin.debug:
      var: grafana_check

  - name: Check if Grafana pod exists (as fallback)
    ansible.builtin.command: kubectl get pods -n {{ grafana_namespace }} -l app.kubernetes.io/name=grafana
      -o name
    register: grafana_pod_check
    changed_when: false
    failed_when: false
    environment: '{{ kubeconfig_env }}'
    when: grafana_check.rc != 0 or grafana_check.stdout == ""

  - name: Debug Grafana pod check result
    ansible.builtin.debug:
      var: grafana_pod_check
    when: grafana_pod_check is defined

  - name: Fail if Grafana is not deployed anywhere
    ansible.builtin.fail:
      msg: Grafana is not deployed. Please install Grafana first.
    when: >
      (grafana_check.rc != 0 or grafana_check.stdout == "") and
      (grafana_pod_check is not defined or grafana_pod_check.rc != 0 or grafana_pod_check.stdout
      == "")

    # Import dashboards without affecting existing installation
  - name: Create dashboard ConfigMap from template
    ansible.builtin.template:
      src: roles/grafana_config/templates/grafana-dashboards.yaml.j2
      dest: /tmp/grafana-test-dashboards.yaml
    register: dashboards_template
    check_mode: false

  - name: Display dashboard template path
    ansible.builtin.debug:
      msg: 'Dashboards template created at: /tmp/grafana-test-dashboards.yaml'
    when: dashboards_template.changed

  - name: List existing ConfigMaps for reference
    ansible.builtin.command: kubectl get configmaps -n {{ grafana_namespace }} -l
      grafana_dashboard=1
    register: existing_dashboards
    changed_when: false
    environment: '{{ kubeconfig_env }}'
    check_mode: false

  - name: Apply dashboard ConfigMap
    ansible.builtin.command: kubectl apply -f /tmp/grafana-test-dashboards.yaml
    register: dashboards_applied
    changed_when: dashboards_applied.rc == 0
    environment: '{{ kubeconfig_env }}'
    when: not ansible_check_mode

  - name: Wait for dashboards to be processed
    ansible.builtin.pause:
      seconds: 10
    when: dashboards_applied.changed and not ansible_check_mode

  - name: Get Grafana service details
    ansible.builtin.command: kubectl get service {{ grafana_release_name }} -n {{
      grafana_namespace }} -o json
    register: grafana_service_raw
    changed_when: false
    environment: '{{ kubeconfig_env }}'
    when: not ansible_check_mode

  - name: Display Grafana access information
    ansible.builtin.debug:
      msg:
      - Grafana dashboards have been applied or would be applied in non-check mode.
      - Access Grafana to verify the dashboards were correctly imported.
      - 'To port-forward Grafana service:'
      - kubectl port-forward svc/{{ grafana_release_name }} 3000:80 -n {{ grafana_namespace
        }}
      - 'Then browse to: http://localhost:3000'
      - ''
      - "Note: Grafana may be running on node {{ grafana_pod_check.stdout.split('/')[1].split('-')[0]
        if grafana_pod_check is defined and grafana_pod_check.stdout else 'unknown'
        }}"
