---
- name: Deploy NFS provisioner to Kubernetes cluster
  hosts: k3s_control_plane
  become: true  # Add become: true to run with sudo privileges
  gather_facts: true
  vars:
    nfs_server: "192.168.1.100"  # Your utility node IP
    nfs_path: "/srv/nfs/kubernetes"
    storage_class_name: "nfs-client"
    kubeconfig_path: "{{ playbook_dir }}/fetched_tokens/k3s-kubeconfig"
  tasks:
    - name: Create directory for kubeconfig
      ansible.builtin.file:
        path: "{{ playbook_dir }}/fetched_tokens"
        state: directory
        mode: '0700'
      delegate_to: localhost
      become: false
      run_once: true

    # Use become: true to read the protected k3s.yaml file
    - name: Fetch kubeconfig from control plane node
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ kubeconfig_path }}"
        flat: true
      # Note: This task inherits the become: true from the play level

    - name: Update kubeconfig to use cluster IP
      ansible.builtin.replace:
        path: "{{ kubeconfig_path }}"
        regexp: 'https://127.0.0.1:6443'
        replace: 'https://{{ ansible_host }}:6443'
      delegate_to: localhost
      become: false

    - name: Fix permissions on kubeconfig
      ansible.builtin.file:
        path: "{{ kubeconfig_path }}"
        mode: '0600'
      delegate_to: localhost
      become: false

    - name: Add NFS provisioner Helm repo
      command: >
        helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner
      register: repo_add
      changed_when: "'has been added' in repo_add.stdout"
      failed_when: repo_add.rc != 0 and "already exists" not in repo_add.stderr
      delegate_to: localhost
      become: false

    - name: Update Helm repos
      command: helm repo update
      register: repo_update
      changed_when: true
      delegate_to: localhost
      become: false

    - name: Check if NFS provisioner is already installed
      command: >
        helm list -n kube-system --kubeconfig={{ kubeconfig_path }} | grep nfs-provisioner
      register: helm_list
      changed_when: false
      failed_when: false
      delegate_to: localhost
      become: false

    - name: Install NFS provisioner
      command: >
        helm install nfs-provisioner 
        nfs-subdir-external-provisioner/nfs-subdir-external-provisioner 
        --namespace kube-system 
        --set nfs.server={{ nfs_server }} 
        --set nfs.path={{ nfs_path }} 
        --set storageClass.name={{ storage_class_name }} 
        --set storageClass.defaultClass=false 
        --kubeconfig={{ kubeconfig_path }}
      register: helm_install
      failed_when: 
        - helm_install.rc != 0 
        - '"already exists" not in helm_install.stderr'
      when: helm_list.rc != 0  # Only install if not already installed
      delegate_to: localhost
      become: false

    - name: Wait for NFS provisioner to be ready
      command: >
        kubectl --kubeconfig={{ kubeconfig_path }} 
        rollout status deployment/nfs-provisioner-nfs-subdir-external-provisioner 
        -n kube-system
      register: rollout
      until: rollout.rc == 0
      retries: 10
      delay: 10
      delegate_to: localhost
      become: false

    - name: Verify storage class creation
      command: >
        kubectl --kubeconfig={{ kubeconfig_path }} 
        get storageclass {{ storage_class_name }}
      register: sc_check
      delegate_to: localhost
      become: false

    - name: Show storage class info
      debug:
        var: sc_check.stdout_lines
      delegate_to: localhost
      become: false