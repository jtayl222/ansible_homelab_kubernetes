---
# cleanup_k3s.yml

- hosts: k3s_cluster
  become: yes
  tasks:
    - name: Stop k3s service
      systemd:
        name: k3s
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Stop k3s-agent service
      systemd:
        name: k3s-agent
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Uninstall k3s
      shell: /usr/local/bin/k3s-uninstall.sh
      ignore_errors: yes

    - name: Uninstall k3s agent
      shell: /usr/local/bin/k3s-agent-uninstall.sh
      ignore_errors: yes

    - name: Remove k3s directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/rancher
        - /var/lib/rancher
        - /var/lib/kubelet
        - /usr/local/bin/k3s
        - /opt/cni
        - /etc/cni

    - name: Remove k3s configuration files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/k3s.service
        - /etc/systemd/system/k3s-agent.service
        - /usr/local/bin/k3s-uninstall.sh
        - /usr/local/bin/k3s-agent-uninstall.sh

        - name: Cleanup iptables rules
          block:
            - name: Flush all chains
              ansible.builtin.shell: |
                iptables -F
                iptables -X
                iptables -t nat -F
                iptables -t nat -X
                iptables -t mangle -F
                iptables -t mangle -X
              become: yes
              changed_when: false
              failed_when: false
              timeout: 30  # Add a timeout to prevent indefinite hanging
          rescue:
            - name: Force iptables reset if initial method fails
              ansible.builtin.shell: |
                systemctl stop netfilter-persistent || true
                iptables-save > /dev/null
                iptables -F
                iptables -X
                iptables -t nat -F
                iptables -t nat -X
                iptables -t mangle -F
                iptables -t mangle -X
              become: yes
              changed_when: false
              failed_when: false
              timeout: 30

    - name: Cleanup network interfaces
      shell: |
        ip link delete cni0
        ip link delete flannel.1
        ip link delete kube-ipvs0
      ignore_errors: yes

    - name: Remove existing kubeconfig
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/rancher/k3s/k3s.yaml
        - "{{ ansible_user_dir }}/.kube/config"

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Reboot node to ensure complete cleanup
      reboot:
        reboot_timeout: 300
      when: cleanup_reboot | default(false)
