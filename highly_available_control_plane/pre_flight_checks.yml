---
- hosts: k3s_control_plane
  gather_facts: yes
  vars:
    control_plane_endpoint: "{{ k3s_control_plane_endpoint }}"
  tasks:
    - name: Verify network connectivity to control plane endpoint
      ansible.builtin.uri:
        url: "https://{{ control_plane_endpoint }}:6443"
        validate_certs: no
        timeout: 10
      register: endpoint_connectivity
      failed_when: false

    - name: Display endpoint connectivity result
      ansible.builtin.debug:
        msg: 
          - "Endpoint: {{ control_plane_endpoint }}"
          - "Connectivity Status: {{ endpoint_connectivity.status | default('Unable to connect') }}"
      when: endpoint_connectivity is defined

    - name: Check token length and format
      ansible.builtin.assert:
        that:
          - k3s_cluster_token is defined
          - k3s_cluster_token | length > 20
        fail_msg: "K3s cluster token is invalid or missing"

    - name: Verify token consistency across nodes
      block:
        - name: Collect token from first control plane node
          ansible.builtin.set_fact:
            first_node_token: "{{ hostvars[groups['k3s_control_plane'][0]]['k3s_cluster_token'] }}"
          run_once: true

        - name: Compare tokens
          ansible.builtin.assert:
            that:
              - k3s_cluster_token == first_node_token
            fail_msg: "Token mismatch between nodes"

    - name: Perform network diagnostics
      block:
        - name: Ping control plane endpoint
          ansible.builtin.command: "ping -c 4 {{ control_plane_endpoint }}"
          register: ping_result
          changed_when: false
          failed_when: false

        - name: Check specific port connectivity
          ansible.builtin.wait_for:
            host: "{{ control_plane_endpoint }}"
            port: 6443
            timeout: 5
            state: started
          register: port_check
          failed_when: false

        - name: Summarize network diagnostics
          ansible.builtin.debug:
            msg:
              - "Ping Successful: {{ ping_result.rc == 0 }}"
              - "Port 6443 Reachable: {{ port_check is succeeded }}"
