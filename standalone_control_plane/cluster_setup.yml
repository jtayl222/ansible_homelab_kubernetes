---
- name: Run pre-flight checks
  import_playbook: pre_flight_checks.yml

- name: Set up K3s control plane
  hosts: k3s_control_plane
  become: true
  gather_facts: true
  roles:
    - role: k3s_control_plane
  tasks:
    - name: Create directory for kubeconfig
      ansible.builtin.file:
        path: "{{ playbook_dir }}/fetched_tokens"
        state: directory
        mode: '0700'
      delegate_to: localhost
      become: false
      run_once: true

    - name: Copy kubeconfig from first control plane node
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ playbook_dir }}/fetched_tokens/k3s-kubeconfig"
        flat: true
      run_once: true

    - name: Create directory for k3s token
      ansible.builtin.file:
        path: "{{ playbook_dir }}/fetched_tokens"
        state: directory
        mode: '0700'
      delegate_to: localhost
      become: false
      run_once: true
      
    - name: Copy node token to local file
      ansible.builtin.copy:
        content: "{{ k3s_token }}"
        dest: "{{ playbook_dir }}/fetched_tokens/{{ ansible_hostname }}-node-token"
        mode: '0600'
      delegate_to: localhost
      become: false
      
    - name: Update kubeconfig to use cluster IP
      ansible.builtin.replace:
        path: "{{ playbook_dir }}/fetched_tokens/k3s-kubeconfig"
        regexp: 'https://127.0.0.1:6443'
        replace: 'https://{{ hostvars[groups["k3s_control_plane"][0]]["ansible_host"] }}:6443'
      delegate_to: localhost
      become: false
      run_once: true
      
    - name: Wait for API server to be ready
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: 6443
        state: started
        timeout: 300
        
- name: Set up K3s workers
  hosts: k3s_worker
  become: true
  gather_facts: true
  vars:
    k3s_token: "{{ lookup('file', playbook_dir + '/fetched_tokens/' + groups['k3s_control_plane'][0] + '-node-token') }}"
    k3s_url: "https://{{ hostvars[groups['k3s_control_plane'][0]]['ansible_host'] }}:6443"
  roles:
    - role: k3s_worker

- name: Set up Helm
  hosts: k3s_control_plane[0]
  become: true
  gather_facts: true
  roles:
    - role: helm_setup
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tasks:
    - name: Wait for nodes to be ready
      ansible.builtin.shell: kubectl get nodes
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: kubectl_nodes
      until: kubectl_nodes.rc == 0 and (kubectl_nodes.stdout_lines | select('search', 'Ready') | list | length) == (groups['k3s_control_plane'] | length + groups['k3s_worker'] | length)
      retries: 10
      delay: 30
      changed_when: false

- name: Deploy Prometheus stack
  hosts: k3s_control_plane[0]
  become: true
  gather_facts: true
  roles:
    - role: prometheus_stack
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Configure Grafana
  hosts: k3s_control_plane[0]
  become: true
  gather_facts: true
  roles:
    - role: grafana_config
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tasks:
    - name: Display cluster access information
      ansible.builtin.debug:
        msg:
          - "Kubernetes cluster has been successfully set up!"
          - "-------------------------------------------------------------------------"
          - "Control plane nodes: {{ groups['k3s_control_plane'] | join(', ') }}"
          - "Worker nodes: {{ groups['k3s_worker'] | join(', ') }}"
          - "-------------------------------------------------------------------------"
          - "Access the cluster using:"
          - "export KUBECONFIG={{ playbook_dir }}/fetched_tokens/k3s-kubeconfig"
          - "-------------------------------------------------------------------------"
          - "Access services:"
          - "Kubernetes API: https://{{ hostvars[groups['k3s_control_plane'][0]]['ansible_host'] }}:6443"
          - "Prometheus: http://prometheus-server.monitoring.svc.cluster.local"
          - "Grafana: http://grafana.monitoring.svc.cluster.local (user: admin, password: admin)"
          - "-------------------------------------------------------------------------"
          - "To access services externally, set up port forwarding:"
          - "kubectl port-forward svc/prometheus-server 9090:9090 -n monitoring"
          - "kubectl port-forward svc/grafana 3000:80 -n monitoring"
          - "-------------------------------------------------------------------------"
      delegate_to: localhost
      become: false
      run_once: true
