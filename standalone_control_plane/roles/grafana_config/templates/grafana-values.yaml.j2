# Grafana configuration values for Helm chart
adminPassword: "{{ grafana_admin_password | default('admin') }}"
admin:
  existingSecret: ""
  userKey: admin-user
  passwordKey: admin-password

## Expose the Grafana service
service:
  type: {{ grafana_service_type }}
  port: {{ grafana_service_port }}
  targetPort: {{ grafana_target_port }}
  annotations: {}

ingress:
  enabled: {{ grafana_ingress_enabled | lower }}
{% if grafana_ingress_enabled %}
  annotations:
{% for key, value in grafana_ingress_annotations.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
  hosts:
    - {{ grafana_ingress_host }}
{% endif %}

# Configure persistent storage
persistence:
  enabled: {{ grafana_persistence_enabled | lower }}
  size: {{ grafana_persistence_size }}
  storageClassName: {{ grafana_storage_class_name }}

# Configure resource requests and limits
resources:
  limits:
    cpu: {{ grafana_resources_limits_cpu }}
    memory: {{ grafana_resources_limits_memory }}
  requests:
    cpu: {{ grafana_resources_requests_cpu }}
    memory: {{ grafana_resources_requests_memory }}

# Configure datasources
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://{{ prometheus_service_name }}.{{ prometheus_namespace }}.svc.cluster.local:{{ prometheus_port }}
        access: proxy
        isDefault: true

# Configure dashboards providers
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

# Import dashboards from grafana.com
{% if grafana_custom_dashboards is defined %}
dashboards:
  default:
{% for dashboard in grafana_custom_dashboards %}
    {{ dashboard.name }}:
      gnetId: {{ dashboard.gnetId }}
      revision: {{ dashboard.revision }}
      datasource: Prometheus
{% endfor %}
{% endif %}

# Install plugins
{% if grafana_plugins is defined and grafana_plugins|length > 0 %}
plugins:
{% for plugin in grafana_plugins %}
  - {{ plugin }}
{% endfor %}
{% endif %}

# Grafana.ini configuration for subpath
grafana.ini:
  server:
    domain: {{ ansible_host }}
    root_url: "%(protocol)s://%(domain)s:{{ traefik_port | default('80') }}/grafana/"
    serve_from_sub_path: true