---
- name: Create monitoring namespace
  kubernetes.core.k8s:
    name: "{{ prometheus_namespace }}"
    kind: Namespace
    state: present
  register: namespace_created

- name: Copy custom values file for prometheus-operator
  ansible.builtin.template:
    src: prometheus-values.yaml.j2
    dest: /tmp/prometheus-values.yaml
  register: prometheus_values
  when: prometheus_custom_values | bool

- name: Install kube-prometheus-stack using Helm
  kubernetes.core.helm:
    name: "{{ prometheus_release_name }}"
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: "{{ prometheus_namespace }}"
    values_files: 
      - "{{ '/tmp/prometheus-values.yaml' if prometheus_custom_values else omit }}"
    values: "{{ prometheus_values_override if not prometheus_custom_values else omit }}"
    update_repo_cache: "{{ update_helm_repo | bool }}"
    wait: true
    timeout: "{{ helm_operation_timeout }}s"
  register: prometheus_deployment

- name: Wait for Prometheus to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ prometheus_release_name }}-prometheus"
    namespace: "{{ prometheus_namespace }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"
  when: prometheus_deployment is changed
  register: prometheus_ready

- name: Install standalone Prometheus exporters if configured
  kubernetes.core.helm:
    name: "{{ item.name }}"
    chart_ref: "{{ item.chart }}"
    release_namespace: "{{ prometheus_namespace }}"
    values: "{{ item.values | default(omit) }}"
    update_repo_cache: false
    wait: true
  loop: "{{ prometheus_exporters