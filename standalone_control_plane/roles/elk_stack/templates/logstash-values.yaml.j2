---
# Logstash Helm chart values

# Image settings
image: "docker.elastic.co/logstash/logstash"
imageTag: "{{ logstash_version | default('8.12.0') }}"
imagePullPolicy: "IfNotPresent"

# Replica count
replicaCount: {{ logstash_replicas | default(1) }}

# Resources configuration
resources:
  requests:
    cpu: "{{ logstash_cpu_request | default('100m') }}"
    memory: "{{ logstash_memory_request | default('1Gi') }}"
  limits:
    cpu: "{{ logstash_cpu_limit | default('1000m') }}"
    memory: "{{ logstash_memory_limit | default('2Gi') }}"

# Pod security settings
securityContext:
  runAsUser: 1000
  fsGroup: 1000

# Logstash configuration
logstashConfig:
  logstash.yml: |
    http.host: 0.0.0.0
    xpack.monitoring.elasticsearch.hosts: ["https://{{ elasticsearch_cluster_name }}-master:9200"]
    xpack.monitoring.elasticsearch.username: elastic
    xpack.monitoring.elasticsearch.password: "{{ elastic_password | default('changeme') }}"
    xpack.monitoring.elasticsearch.ssl.verification_mode: certificate
    xpack.monitoring.elasticsearch.ssl.certificate_authority: /usr/share/logstash/config/certs/ca.crt

# Logstash Pipeline configuration
logstashPipeline:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
      http {
        port => 8080
      }
      tcp {
        port => 5000
      }
    }

    filter {
      # Add your filters here
      if [type] == "syslog" {
        grok {
          match => { "message" => "%{SYSLOGLINE}" }
        }
        date {
          match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
      }
    }

    output {
      elasticsearch {
        hosts => ["https://{{ elasticsearch_cluster_name }}-master:9200"]
        user => "elastic"
        password => "{{ elastic_password | default('changeme') }}"
        ssl => true
        ssl_certificate_verification => true
        cacert => "/usr/share/logstash/config/certs/ca.crt"
        index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
      }
    }

# Service configuration
service:
  type: ClusterIP
  ports:
    - name: beats
      port: 5044
      protocol: TCP
      targetPort: 5044
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: tcp
      port: 5000
      protocol: TCP
      targetPort: 5000

# Configure persistence
persistence:
  enabled: true
  storageClassName: "nfs-client"
  accessMode: ReadWriteOnce
  size: "4Gi"

# Mount certificates
extraVolumes:
  - name: logstash-certificates
    secret:
      secretName: logstash-certificates

extraVolumeMounts:
  - name: logstash-certificates
    mountPath: /usr/share/logstash/config/certs
    readOnly: true

# Pod anti-affinity to spread across nodes
antiAffinity: "soft"